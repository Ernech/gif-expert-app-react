{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiffExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGIfs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GiffExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAEQ,sBAAMC,SAVQ,SAACC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAU,OAAIP,GAAJ,mBAAkBO,OAC1CN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACkCC,UAAUH,GAD5C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QARtB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBJ,EAAgB,EAAhBA,GAAGC,EAAa,EAAbA,MAAMV,EAAO,EAAPA,IAGlC,OADAc,QAAQC,IAAI,CAACN,KAAGC,QAAMV,QAElB,sBAAKgB,UAAW,yCAAhB,UACI,qBAAKC,IAAKjB,EAAKkB,IAAOR,IACtB,4BAAIA,QCAHS,EAAS,SAAC,GAAc,IAAbrB,EAAY,EAAZA,SAKpB,ECVwB,SAACA,GAC1B,MAAuBd,mBAAS,CAC5BqB,KAAK,GACLe,SAAQ,IAFZ,mBAAMC,EAAN,KAAYC,EAAZ,KAeA,OAVAC,qBAAU,WAEF1B,EAAQC,GAAU0B,MAAK,SAAAhB,GACnBc,EAAS,CAACjB,KAAKG,EAAIY,SAAQ,SAKrC,CAACtB,IAEIuB,EDNuBI,CAAa3B,GAA9Ba,EAAZ,EAAON,KAAYe,EAAnB,EAAmBA,QAKnB,OAJAN,QAAQC,IAAIK,GAKR,qCACA,6BAAKtB,IACJsB,GAAW,wCACZ,qBAAKJ,UAAY,6CAAjB,SAGQL,EAAOJ,KAAI,SAAAC,GAAG,OAAG,cAAC,EAAD,eAAgCA,GAAZA,EAAIC,aEW1CiB,EAhCO,WAGlB,MAAmC1C,mBAAS,CAAC,UAA7C,mBAAOQ,EAAP,KAAkBT,EAAlB,KAQA,OACE,qCACA,+CAEF,cAAC,EAAD,CAAaA,cAAiBA,IAE5B,uBAEA,6BAEMS,EAAWe,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CACAA,SAAUA,GADKA,Y,MCrB/B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.63c0d470.chunk.js","sourcesContent":["import React,{ useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories(categories =>[inputValue,...categories]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n            <form onSubmit={handleSubmmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGIfs = async(category)=>{\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=lvXQGJ2edtZP2sykvE0QaYqGwO92yA72`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img=>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    });\r\n   // console.log(gifs);\r\n    return gifs;\r\n};","import React from 'react';\r\n\r\nexport const GifGridItem = ({id,title,url})=>{\r\n\r\n    console.log({id,title,url});\r\n    return(\r\n        <div className =\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt = {title}  />\r\n            <p>{title}</p>\r\n        </div>\r\n\r\n    );\r\n\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGIfs } from '../helpers/getGifs';\r\n//import { GifGridItem } from './GifGridItem';\r\n\r\n\r\n\r\nexport const GifGrid =({category})=>{\r\n\r\n//    const [images,setImages] = useState([]);\r\n\r\n\r\n    const {data:images,loading} =useFetchGifs(category);\r\n    console.log(loading);\r\n   \r\n //   getGIfs();\r\n\r\n    return(\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading && <p>Loading</p>}\r\n        <div className = \"card-grid animate__animated animate__flash\">\r\n       \r\n            {\r\n                images.map(img =><GifGridItem key = {img.id} {...img}/>)\r\n            }\r\n       \r\n        </div>\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from 'react'\r\nimport { getGIfs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category)=>{\r\n   const[state,setState]= useState({\r\n       data:[],\r\n       loading:true\r\n   });\r\n\r\n   useEffect(()=>{\r\n      \r\n           getGIfs(category).then(img =>{\r\n               setState({data:img,loading:false})\r\n           }\r\n           );\r\n           \r\n      \r\n   },[category]);\r\n \r\n   return state;\r\n}","import React,{useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GiffExpertApp = () =>{\r\n\r\n\r\n    const [categories,setCategories] = useState(['Music'])\r\n\r\n    // const handleAdd = (e)=>{\r\n      \r\n    //   setCategories(categories =>[...categories,'Crash Bandicoot']);\r\n    \r\n    // }\r\n\r\n    return(\r\n      <>\r\n      <h2>GiffExpertApp</h2>\r\n\r\n    <AddCategory setCategories = {setCategories}/>\r\n\r\n      <hr/>\r\n\r\n      <ol>\r\n        { \r\n            categories.map(category => \r\n                <GifGrid key ={category}\r\n                category={category}/>\r\n            )\r\n        }\r\n      </ol>\r\n      </>\r\n    );\r\n  \r\n  }\r\n\r\nexport default GiffExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiffExpertApp from './GiffExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GiffExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}